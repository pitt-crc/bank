name: Run Tests

# Controls when the workflow will run
on:
  push:
  pull_request:
    branches:
      - '**:**'  # Only run for pull requests submitted from forks

  workflow_dispatch:

jobs:
  python_tests:
    runs-on: [self-hosted]
    strategy:
      matrix:
        include:
          - python-version: 3.7
            modules: "gcc/8.2.0 python/anaconda3.7-2019.03"

          - python-version: 3.8
            modules: "gcc/8.2.0 python/anaconda3.8-2020.11"

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Load Python Module
        run: |
          module purge
          module load ${{ matrix.modules }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install test dependencies
        run: |
          pip install coverage

      - name: Run tests with coverage
        run: |
          coverage run -m unittest
          coverage report
          coverage xml -o report_${{ matrix.python-version }}.xml

      # Report test coverage to codacy for the python version being tested
      - name: Report partial coverage results
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -l Python -r report_${{ matrix.python-version }}.xml
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

  codacy-coverage-reporter:
    runs-on: [self-hosted, linux]
    name: Report code coverage
    needs: python_tests
    steps:

      # Tell codacy we are done reporting test coverage
      - name: Finish reporting coverage
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
