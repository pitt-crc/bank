name: Run Tests

on:
  push:
  workflow_dispatch:

jobs:
  python_tests:
    name: Run Python Unittests
    runs-on: [ self-hosted ]

    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]  # Define what python versions to test

    env:
      # Unique name of the conda runtime environment used for each test
      TEST_ENV_NAME: bank_test_${{ matrix.python-version }}_${{ github.run_id }}

    defaults:
      run:
        shell: bash -leo pipefail {0}  # Lets us use the lmod system on CRC machines

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      # Create and activate a unique test environment using conda
      - name: Create Testing Environment
        run: |
          module purge
          conda create -n $env.ENV_NAME python=${{ matrix.python-version }} -y
          conda activate $env.ENV_NAME

      - name: Install Package Dependencies
        run: pip install -r requirements.txt

      - name: Install Test Suite Dependencies
        run: pip install coverage

      - name: Run tests with coverage
        run: |
          coverage run -m unittest
          coverage report
          coverage xml -o report_${{ matrix.python-version }}.xml

      # Report test coverage to codacy for the python version being tested
      - name: Report partial coverage results
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -l Python -r report_${{ matrix.python-version }}.xml
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      # Delete the conda environment created for this test
      - name: Clean up
        if: always()
        run: |
          echo "Removing build environemnt bank_test_${{ matrix.python-version }}_${{ github.run_id }}"
          conda env remove -n ${{ env.ENV_NAME }} -y

  codacy-coverage-reporter:
    name: Report code coverage
    runs-on: [ self-hosted ]
    needs: python_tests
    steps:

      # Tell codacy we are done reporting test coverage
      - name: Finish reporting coverage
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

